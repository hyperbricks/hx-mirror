{
  "version": 3,
  "sources": ["../src/hx-mirror.js"],
  "sourcesContent": ["// src/htmx-mirror.js\n\nexport function hxMirror(htmx) {\n  htmx.defineExtension('mirror', {\n    onEvent(name, evt) {\n      if (name !== 'htmx:afterSwap' && name !== 'htmx:oobAfterSwap') {\n        return;\n      }\n\n      // get the element that just got swapped in\n      const source = name === 'htmx:oobAfterSwap'\n        ? evt.detail && evt.detail.target\n        : evt.detail && evt.detail.elt;\n      if (!source || !source.hasAttribute('hx-mirror')) {\n        return;\n      }\n\n      // split & trim once\n      const selectors = (source.getAttribute('hx-mirror') || '')\n        .split(/,\\s*/)\n        .filter(s => s);\n\n      // for each selector, mirror into all matches\n      selectors.forEach(sel => {\n        document.querySelectorAll(sel).forEach(target => {\n          if (target === source) return;\n\n          // 1) loop-detection: does the target itself mirror back to this source?\n          if (target.hasAttribute('hx-mirror')) {\n            const backSelectors = (target.getAttribute('hx-mirror') || '')\n              .split(/,\\s*/)\n              .filter(s => s);\n            // if any of target\u2019s mirror-selectors matches our source element \u2192 warn once\n            if (backSelectors.some(bs => {\n              try { return source.matches(bs); }\n              catch(_) { return false; }\n            })) {\n              console.warn(`hx-mirror: detected mirror loop between <${source.tagName.toLowerCase()} id=\"${source.id}\"> and <${target.tagName.toLowerCase()} id=\"${target.id}\">`);\n            }\n          }\n\n          // 2) only update if content really changed\n          if (target.innerHTML === source.innerHTML) return;\n\n          // 3) perform the mirror\n          target.innerHTML = source.innerHTML;\n\n          // 4) emit htmx:mirrored so folks can re-init widgets\n          target.dispatchEvent(new CustomEvent('htmx:mirrored', {\n            detail: { source }\n          }));\n        });\n      });\n    }\n  });\n}\n\n// auto-install if htmx is on window\nif (typeof window !== 'undefined' && window.htmx) {\n  hxMirror(window.htmx);\n}\n"],
  "mappings": "+aAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,cAAAE,IAEO,SAASA,EAASC,EAAM,CAC7BA,EAAK,gBAAgB,SAAU,CAC7B,QAAQC,EAAMC,EAAK,CACjB,GAAID,IAAS,kBAAoBA,IAAS,oBACxC,OAIF,IAAME,EAASF,IAAS,oBACpBC,EAAI,QAAUA,EAAI,OAAO,OACzBA,EAAI,QAAUA,EAAI,OAAO,IAC7B,GAAI,CAACC,GAAU,CAACA,EAAO,aAAa,WAAW,EAC7C,QAIiBA,EAAO,aAAa,WAAW,GAAK,IACpD,MAAM,MAAM,EACZ,OAAO,GAAK,CAAC,EAGN,QAAQC,GAAO,CACvB,SAAS,iBAAiBA,CAAG,EAAE,QAAQC,GAAU,CAC3CA,IAAWF,IAGXE,EAAO,aAAa,WAAW,IACVA,EAAO,aAAa,WAAW,GAAK,IACxD,MAAM,MAAM,EACZ,OAAOC,GAAKA,CAAC,EAEE,KAAKC,GAAM,CAC3B,GAAI,CAAE,OAAOJ,EAAO,QAAQI,CAAE,CAAG,MACxB,CAAE,MAAO,EAAO,CAC3B,CAAC,GACC,QAAQ,KAAK,4CAA4CJ,EAAO,QAAQ,YAAY,CAAC,QAAQA,EAAO,EAAE,WAAWE,EAAO,QAAQ,YAAY,CAAC,QAAQA,EAAO,EAAE,IAAI,EAKlKA,EAAO,YAAcF,EAAO,YAGhCE,EAAO,UAAYF,EAAO,UAG1BE,EAAO,cAAc,IAAI,YAAY,gBAAiB,CACpD,OAAQ,CAAE,OAAAF,CAAO,CACnB,CAAC,CAAC,GACJ,CAAC,CACH,CAAC,CACH,CACF,CAAC,CACH,CAGI,OAAO,OAAW,KAAe,OAAO,MAC1CJ,EAAS,OAAO,IAAI",
  "names": ["hx_mirror_exports", "__export", "hxMirror", "htmx", "name", "evt", "source", "sel", "target", "s", "bs"]
}
